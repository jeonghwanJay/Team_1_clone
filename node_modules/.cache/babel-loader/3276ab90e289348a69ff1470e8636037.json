{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport { produce } from 'immer';\nimport { api } from '../../shared/api';\nconst GET_PRODUCTS = 'GET_PRODUCTS';\nconst LOADING = 'LOADING';\nconst BEST_PRODUCT = \"BEST_PRODUCT\";\nconst DISCOUNT_PRODUCT = \"DISCOUNT_PRODUCT\";\nconst getProducts = createAction(GET_PRODUCTS, products => ({\n  products\n}));\nconst loading = createAction(LOADING, isLoading => ({\n  isLoading\n}));\nconst bestProduct = createAction(BEST_PRODUCT, post_list => ({\n  post_list\n}));\nconst discountProduct = createAction(DISCOUNT_PRODUCT, post_list => ({\n  post_list\n}));\nconst initialState = {\n  list: [],\n  list2: [],\n  isLoading: false\n}; // 메인페이지 제품들 보여주기\n\nconst getProductsMiddleWare = () => {\n  return function (dispatch) {\n    dispatch(loading(true));\n    api.get('/page/main/new').then(result => {\n      console.log(result.data.sortByNew);\n      const sort = result.data.sortByNew;\n      let products = [];\n      sort.forEach(p => {\n        let product = {\n          postId: p.postId,\n          title: p.title,\n          price: p.price,\n          img: p.img\n        };\n        products.push(product);\n      });\n      dispatch(getProducts(products));\n    });\n  };\n};\n\nconst bestProductM = () => async (dispatch, getState) => {\n  api.get(\"page/sub/best\").then(res => {\n    const best_data = res.data;\n    const best_datas = best_data.sortByBest;\n    let best_list = [];\n    best_datas.forEach(doc => {\n      best_list.push({\n        id: doc.id,\n        ...doc\n      });\n    });\n    dispatch(bestProduct(best_list));\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nconst discountProductM = () => async (dispatch, getState) => {\n  api.get(\"/page/sub/discount\").then(res => {\n    const discount_data = res.data;\n    const discount_datas = discount_data.sortByDis;\n    let discount_list = [];\n    discount_datas.forEach(doc => {\n      discount_list.push({\n        id: doc.id,\n        ...doc\n      });\n    });\n    dispatch(discountProduct(discount_list));\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nexport default handleActions({\n  [GET_PRODUCTS]: (state, action) => produce(state, draft => {\n    draft.list = action.payload.products;\n    draft.isLoading = false;\n  }),\n  [LOADING]: (state, action) => produce(state, draft => {\n    draft.isLoading = action.payload.isLoading;\n  }),\n  [BEST_PRODUCT]: function () {\n    let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n    let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    console.log(\"Best product 리듀서로 도착했습니다\", state, action.payload);\n    return { ...state,\n      list: action.payload.post_list\n    };\n  },\n  [DISCOUNT_PRODUCT]: function () {\n    let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n    let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return { ...state,\n      list2: action.payload.post_list\n    };\n  }\n}, initialState);\nconst actionCreators = {\n  getProducts,\n  getProductsMiddleWare,\n  bestProductM,\n  discountProductM\n};\nexport { actionCreators };","map":{"version":3,"sources":["/Users/jeonghwan/Desktop/Clonemk/clone_mk/clone_mk/src/redux/modules/product.js"],"names":["createAction","handleActions","produce","api","GET_PRODUCTS","LOADING","BEST_PRODUCT","DISCOUNT_PRODUCT","getProducts","products","loading","isLoading","bestProduct","post_list","discountProduct","initialState","list","list2","getProductsMiddleWare","dispatch","get","then","result","console","log","data","sortByNew","sort","forEach","p","product","postId","title","price","img","push","bestProductM","getState","res","best_data","best_datas","sortByBest","best_list","doc","id","catch","err","discountProductM","discount_data","discount_datas","sortByDis","discount_list","state","action","draft","payload","actionCreators"],"mappings":"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","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\nimport { produce } from 'immer';\nimport { api } from '../../shared/api';\n\nconst GET_PRODUCTS = 'GET_PRODUCTS';\nconst LOADING = 'LOADING';\n\nconst BEST_PRODUCT = \"BEST_PRODUCT\";\nconst DISCOUNT_PRODUCT = \"DISCOUNT_PRODUCT\";\n\nconst getProducts = createAction(GET_PRODUCTS, products => ({\n\tproducts,\n}));\nconst loading = createAction(LOADING, isLoading => ({\n\tisLoading,\n}));\n\nconst bestProduct = createAction(BEST_PRODUCT, (post_list) => ({ post_list }));\nconst discountProduct = createAction(DISCOUNT_PRODUCT, (post_list) => ({post_list,}));\n\nconst initialState = {\n\tlist: [],\n\tlist2: [],\n\tisLoading: false,\n};\n\n\t// 메인페이지 제품들 보여주기\nconst getProductsMiddleWare = () => {\n\treturn function (dispatch) {\n\t  \n\t  dispatch(loading(true));\n  \n\t  api\n\t  \t.get('/page/main/new')\n\t\t.then((result) => {\n\t\t  console.log(result.data.sortByNew)\n\t\t  \n\t\t  const sort = result.data.sortByNew\n\t\t\t\n\t\t  let products = [];\n\n\t\t  sort.forEach((p) => {\n\t\t\t\n\t\t\tlet product = {\n\t\t\t  postId: p.postId,\n\t\t\t  title: p.title,\n\t\t\t  price: p.price,\n\t\t\t  img:p.img,\n\t\t\t}\n\t\t  products.push(product);\n\t\t  });\n\t\t  dispatch(getProducts(products));\n\t\t})\n\t}\n  };\n\n  const bestProductM = () => async (dispatch, getState) => {\n\tapi\n\t  .get(\"page/sub/best\")\n\t  .then((res) => {\n\t\tconst best_data = res.data;\n\t\tconst best_datas = best_data.sortByBest;\n\t\tlet best_list = [];\n  \n\t\tbest_datas.forEach((doc) => {\n\t\t  best_list.push({ id: doc.id, ...doc });\n\t\t});\n\t\tdispatch(bestProduct(best_list));\n\t  })\n\t  .catch((err) => {\n\t\tconsole.log(err);\n\t  });\n  };\n  \n  const discountProductM = () => async (dispatch, getState) => {\n\tapi\n\t  .get(\"/page/sub/discount\")\n\t  .then((res) => {\n\t\tconst discount_data = res.data;\n\t\tconst discount_datas = discount_data.sortByDis;\n\t\tlet discount_list = [];\n  \n\t\tdiscount_datas.forEach((doc) => {\n\t\t  discount_list.push({ id: doc.id, ...doc });\n\t\t});\n\t\tdispatch(discountProduct(discount_list));\n\t  })\n\t  .catch((err) => {\n\t\tconsole.log(err);\n\t  });\n  };\n\nexport default handleActions(\n\t{\n\t\t[GET_PRODUCTS]: (state, action) =>\n\t\t\tproduce(state, draft => {\n\t\t\t\tdraft.list = action.payload.products;\n\t\t\t\tdraft.isLoading = false;\n\t\t\t}),\n\t\t[LOADING]: (state, action) =>\n\t\t\tproduce(state, draft => {\n\t\t\t\tdraft.isLoading = action.payload.isLoading;\n\t\t\t}),\n\t\t[BEST_PRODUCT]: (state = initialState, action = {}) => {\n\t\t\t\tconsole.log(\"Best product 리듀서로 도착했습니다\", state, action.payload);\n\t\t\t\treturn { ...state, list: action.payload.post_list };\n\t\t\t  },\n\t\t  \n\t\t[DISCOUNT_PRODUCT]: (state = initialState, action = {}) => {\n\t\t\t\treturn { ...state, list2: action.payload.post_list };\n\t\t\t  },\n\t\t\n\t},\n\tinitialState,\n);\n\nconst actionCreators = {\n\tgetProducts,\n\tgetProductsMiddleWare,\n\tbestProductM,\n\tdiscountProductM\n};\n\nexport { actionCreators };"]},"metadata":{},"sourceType":"module"}