{"ast":null,"code":"// import { createAction, handleActions } from 'redux-actions';\n// import { produce } from 'immer';\n// import { api } from '../../shared/api';\n// const GET_PRODUCTS = 'GET_PRODUCTS';\n// const LOADING = 'LOADING';\n// const getProducts = createAction(GET_PRODUCTS, products => ({\n// \tproducts,\n// }));\n// const loading = createAction(LOADING, isLoading => ({\n// \tisLoading,\n// }));\n// const initialState = {\n// \tproducts: [],\n// \tisLoading: false,\n// \t// list: [\n// \t// \t{\t\n// \t// \t\tpostId: \"postId\",\n// \t// \t\ttitle: '[올리타리아] 엑스트라 버진 올리브유',\n// \t// \t\timg: 'https://img-cf.kurly.com/shop/data/goods/1587519777879l0.jpg',\n// \t// \t\tprice: 15000,\n// \t// \t},\n// \t// ]\n// };\n// const getProductsMiddleWare = () => {\n// \treturn function (dispatch, getState, { history }) {\n// \t\tdispatch(loading(true));\n// \t\tapi\n// \t\t\t.get('page/main/new')\n// \t\t\t.then(\n// \t\t\t\t(res) => {\n// \t\t\t\t\t// const products = res.data;\n// \t\t\t\t\t// const products = res.data.post;\n// \t\t\t\t\t// const products = res.data.list\n// \t\t\t\t\tlet products = [];\n// \t\t\t\t\tres.forEach((p)=>{\n// \t\t\t\t\t\tlet product = {\n// \t\t\t\t\t\t\tpostId: p.postId,\n// \t\t\t\t\t\t\ttitle: p.title,\n// \t\t\t\t\t\t\tprice: p.price,\n// \t\t\t\t\t\t\timg: p.img,\n// \t\t\t\t\t\t}\n// \t\t\t\t\tproducts.push(product);\n// \t\t\t\t\t})\n// \t\t\t\t\tdispatch(getProducts(products));\n// \t\t\t\t},\n// \t\t\t\t// { withCredentials: true },\n// \t\t\t)\n// \t\t\t.catch(err => {\n// \t\t\t\tconsole.error(err);\n// \t\t\t\tdispatch(loading(false));\n// \t\t\t});\n// \t};\n// \t// return function(dispatch) {\n// \t// \tapi \n// \t// \t.get('/page/main/new')\n// \t// \t.then(res=>{\n// \t// \t\tdispatch(getProducts(res.data));\n// \t// \t})\n// \t// \t.catch(err=> console.log(err));\n// \t// }\n// };\n// export default handleActions(\n// \t{\n// \t\t[GET_PRODUCTS]: (state, action) =>\n// \t\t\tproduce(state, draft => {\n// \t\t\t\tdraft.list = action.payload.products;\n// \t\t\t\t// draft.sortByNew = action.payload.products;\n// \t\t\t\tdraft.isLoading = false;\n// \t\t\t}),\n// \t\t[LOADING]: (state, action) =>\n// \t\t\tproduce(state, draft => {\n// \t\t\t\tdraft.isLoading = action.payload.isLoading;\n// \t\t\t}),\n// \t},\n// \tinitialState,\n// );\n// const actionCreators = {\n// \tgetProducts,\n// \tgetProductsMiddleWare,\n// };\n// export { actionCreators };","map":{"version":3,"sources":["/Users/jeonghwan/Desktop/Clonemk/clone_mk/clone_mk/src/redux/modules/product.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["// import { createAction, handleActions } from 'redux-actions';\n// import { produce } from 'immer';\n\n// import { api } from '../../shared/api';\n\n// const GET_PRODUCTS = 'GET_PRODUCTS';\n// const LOADING = 'LOADING';\n\n// const getProducts = createAction(GET_PRODUCTS, products => ({\n// \tproducts,\n// }));\n// const loading = createAction(LOADING, isLoading => ({\n// \tisLoading,\n// }));\n\n// const initialState = {\n// \tproducts: [],\n// \tisLoading: false,\n// \t// list: [\n// \t// \t{\t\n// \t// \t\tpostId: \"postId\",\n// \t// \t\ttitle: '[올리타리아] 엑스트라 버진 올리브유',\n// \t// \t\timg: 'https://img-cf.kurly.com/shop/data/goods/1587519777879l0.jpg',\n// \t// \t\tprice: 15000,\n// \t// \t},\n// \t// ]\n// };\n\n// const getProductsMiddleWare = () => {\n// \treturn function (dispatch, getState, { history }) {\n// \t\tdispatch(loading(true));\n// \t\tapi\n// \t\t\t.get('page/main/new')\n// \t\t\t.then(\n// \t\t\t\t(res) => {\n// \t\t\t\t\t// const products = res.data;\n// \t\t\t\t\t// const products = res.data.post;\n// \t\t\t\t\t// const products = res.data.list\n// \t\t\t\t\tlet products = [];\n// \t\t\t\t\tres.forEach((p)=>{\n// \t\t\t\t\t\tlet product = {\n// \t\t\t\t\t\t\tpostId: p.postId,\n// \t\t\t\t\t\t\ttitle: p.title,\n// \t\t\t\t\t\t\tprice: p.price,\n// \t\t\t\t\t\t\timg: p.img,\n// \t\t\t\t\t\t}\n// \t\t\t\t\tproducts.push(product);\n// \t\t\t\t\t})\n// \t\t\t\t\tdispatch(getProducts(products));\n// \t\t\t\t},\n// \t\t\t\t// { withCredentials: true },\n// \t\t\t)\n// \t\t\t.catch(err => {\n// \t\t\t\tconsole.error(err);\n// \t\t\t\tdispatch(loading(false));\n// \t\t\t});\n// \t};\n\n// \t// return function(dispatch) {\n// \t// \tapi \n// \t// \t.get('/page/main/new')\n// \t// \t.then(res=>{\n\t\t  \n// \t// \t\tdispatch(getProducts(res.data));\n// \t// \t})\n// \t// \t.catch(err=> console.log(err));\n// \t// }\n// };\n\n// export default handleActions(\n// \t{\n// \t\t[GET_PRODUCTS]: (state, action) =>\n// \t\t\tproduce(state, draft => {\n// \t\t\t\tdraft.list = action.payload.products;\n// \t\t\t\t// draft.sortByNew = action.payload.products;\n// \t\t\t\tdraft.isLoading = false;\n// \t\t\t}),\n// \t\t[LOADING]: (state, action) =>\n// \t\t\tproduce(state, draft => {\n// \t\t\t\tdraft.isLoading = action.payload.isLoading;\n// \t\t\t}),\n// \t},\n// \tinitialState,\n// );\n\n// const actionCreators = {\n// \tgetProducts,\n// \tgetProductsMiddleWare,\n// };\n\n// export { actionCreators };"]},"metadata":{},"sourceType":"module"}