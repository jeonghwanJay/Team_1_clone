{"ast":null,"code":"// import { createAction, handleActions } from 'redux-actions';\n// import { produce } from 'immer';\n// import { api } from '../../shared/api';\n// const GET_PRODUCTS = 'GET_PRODUCTS';\n// const LOADING = 'LOADING';\n// const getProducts = createAction(GET_PRODUCTS, products => ({\n// \tproducts,\n// }));\n// const loading = createAction(LOADING, isLoading => ({\n// \tisLoading,\n// }));\n// const initialState = {\n// \tproducts: [],\n// \tisLoading: false,\n// \t// list: [\n// \t// \t{\t\n// \t// \t\tpostId: \"postId\",\n// \t// \t\ttitle: '[올리타리아] 엑스트라 버진 올리브유',\n// \t// \t\timg: 'https://img-cf.kurly.com/shop/data/goods/1587519777879l0.jpg',\n// \t// \t\tprice: 15000,\n// \t// \t},\n// \t// ]\n// };\n// const getProductsMiddleWare = () => {\n// \treturn function (dispatch, getState, { history }) {\n// \t\tdispatch(loading(true));\n// \t\tapi\n// \t\t\t.get('page/main/new')\n// \t\t\t.then(\n// \t\t\t\t(res) => {\n// \t\t\t\t\t// const products = res.data;\n// \t\t\t\t\t// const products = res.data.post;\n// \t\t\t\t\t// const products = res.data.list\n// \t\t\t\t\tlet products = [];\n// \t\t\t\t\tres.forEach((p)=>{\n// \t\t\t\t\t\tlet product = {\n// \t\t\t\t\t\t\tpostId: p.postId,\n// \t\t\t\t\t\t\ttitle: p.title,\n// \t\t\t\t\t\t\tprice: p.price,\n// \t\t\t\t\t\t\timg: p.img,\n// \t\t\t\t\t\t}\n// \t\t\t\t\tproducts.push(product);\n// \t\t\t\t\t})\n// \t\t\t\t\tdispatch(getProducts(products));\n// \t\t\t\t},\n// \t\t\t\t// { withCredentials: true },\n// \t\t\t)\n// \t\t\t.catch(err => {\n// \t\t\t\tconsole.error(err);\n// \t\t\t\tdispatch(loading(false));\n// \t\t\t});\n// \t};\n// \t// return function(dispatch) {\n// \t// \tapi \n// \t// \t.get('/page/main/new')\n// \t// \t.then(res=>{\n// \t// \t\tdispatch(getProducts(res.data));\n// \t// \t})\n// \t// \t.catch(err=> console.log(err));\n// \t// }\n// };\n// export default handleActions(\n// \t{\n// \t\t[GET_PRODUCTS]: (state, action) =>\n// \t\t\tproduce(state, draft => {\n// \t\t\t\tdraft.list = action.payload.products;\n// \t\t\t\t// draft.sortByNew = action.payload.products;\n// \t\t\t\tdraft.isLoading = false;\n// \t\t\t}),\n// \t\t[LOADING]: (state, action) =>\n// \t\t\tproduce(state, draft => {\n// \t\t\t\tdraft.isLoading = action.payload.isLoading;\n// \t\t\t}),\n// \t},\n// \tinitialState,\n// );\n// const actionCreators = {\n// \tgetProducts,\n// \tgetProductsMiddleWare,\n// };\n// export { actionCreators };\nimport { createAction, handleActions } from 'redux-actions';\nimport { produce } from 'immer';\nimport { api } from '../../shared/api';\nconst GET_PRODUCTS = 'GET_PRODUCTS';\nconst LOADING = 'LOADING';\nconst getProducts = createAction(GET_PRODUCTS, products => ({\n  products\n}));\nconst loading = createAction(LOADING, isLoading => ({\n  isLoading\n}));\nconst initialState = {\n  // list: [\n  // \t{\t\n  // \t\tpostId: 'postId',\n  // \t\ttitle: '[올리타리아] 엑스트라 버진 올리브유',\n  // \t\timg: 'https://img-cf.kurly.com/shop/data/goods/1587519777879l0.jpg',\n  // \t\tprice: 15000,\n  // \t},\n  // ],\n  list: [],\n  isLoading: false\n}; // const getProductsMiddleWare = () => {\n// \treturn dispatch => {\n// \t\tdispatch(loading(true));\n// \t\tapi\n// \t\t\t.get('/page/main/new')\n// \t\t\t.then(\n// \t\t\t\tres => {\n// \t\t\t\t\tconst products = res.data.post;\n// \t\t\t\t\tdispatch(getProducts(products));\n// \t\t\t\t},\n// \t\t\t\t{ withCredentials: true },\n// \t\t\t)\n// \t\t\t.catch(err => {\n// \t\t\t\tconsole.error(err);\n// \t\t\t\tdispatch(loading(false));\n// \t\t\t});\n// \t};\n// };\n\nconst getProductsMiddleWare = () => {\n  return function (dispatch, getState, _ref) {\n    let {\n      history\n    } = _ref;\n    dispatch(loading(true));\n    api.get('/page/main/new') //   fetch(API).then((response) => response.json())\n    .then(result => {\n      console.log(result.data.sortByNew);\n      let products = [];\n      result.forEach(p => {\n        let product = {\n          postId: p.postId,\n          title: p.title,\n          price: p.price,\n          //   subtext: p.subtext,\n          img: p.img\n        };\n        products.push(product);\n      });\n      dispatch(getProducts(products));\n    });\n  };\n};\n\nexport default handleActions({\n  [GET_PRODUCTS]: (state, action) => produce(state, draft => {\n    draft.list = action.payload.products;\n    draft.isLoading = false;\n  }),\n  [LOADING]: (state, action) => produce(state, draft => {\n    draft.isLoading = action.payload.isLoading;\n  })\n}, initialState);\nconst actionCreators = {\n  getProducts,\n  getProductsMiddleWare\n};\nexport { actionCreators };","map":{"version":3,"sources":["/Users/jeonghwan/Desktop/Clonemk/clone_mk/clone_mk/src/redux/modules/product.js"],"names":["createAction","handleActions","produce","api","GET_PRODUCTS","LOADING","getProducts","products","loading","isLoading","initialState","list","getProductsMiddleWare","dispatch","getState","history","get","then","result","console","log","data","sortByNew","forEach","p","product","postId","title","price","img","push","state","action","draft","payload","actionCreators"],"mappings":"AAAA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,SAASC,GAAT,QAAoB,kBAApB;AAEA,MAAMC,YAAY,GAAG,cAArB;AACA,MAAMC,OAAO,GAAG,SAAhB;AAEA,MAAMC,WAAW,GAAGN,YAAY,CAACI,YAAD,EAAeG,QAAQ,KAAK;AAC3DA,EAAAA;AAD2D,CAAL,CAAvB,CAAhC;AAGA,MAAMC,OAAO,GAAGR,YAAY,CAACK,OAAD,EAAUI,SAAS,KAAK;AACnDA,EAAAA;AADmD,CAAL,CAAnB,CAA5B;AAIA,MAAMC,YAAY,GAAG;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,IAAI,EAAE,EATc;AAUpBF,EAAAA,SAAS,EAAE;AAVS,CAArB,C,CAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMG,qBAAqB,GAAG,MAAM;AACnC,SAAO,UAAUC,QAAV,EAAoBC,QAApB,QAA2C;AAAA,QAAb;AAAEC,MAAAA;AAAF,KAAa;AAEhDF,IAAAA,QAAQ,CAACL,OAAO,CAAC,IAAD,CAAR,CAAR;AAEAL,IAAAA,GAAG,CACDa,GADF,CACM,gBADN,EAEF;AAFE,KAGAC,IAHA,CAGMC,MAAD,IAAY;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAP,CAAYC,SAAxB;AACA,UAAIf,QAAQ,GAAG,EAAf;AAEAW,MAAAA,MAAM,CAACK,OAAP,CAAgBC,CAAD,IAAO;AAEvB,YAAIC,OAAO,GAAG;AACZC,UAAAA,MAAM,EAAEF,CAAC,CAACE,MADE;AAEZC,UAAAA,KAAK,EAAEH,CAAC,CAACG,KAFG;AAGZC,UAAAA,KAAK,EAAEJ,CAAC,CAACI,KAHG;AAId;AACEC,UAAAA,GAAG,EAACL,CAAC,CAACK;AALM,SAAd;AAOCtB,QAAAA,QAAQ,CAACuB,IAAT,CAAcL,OAAd;AACC,OAVD;AAWAZ,MAAAA,QAAQ,CAACP,WAAW,CAACC,QAAD,CAAZ,CAAR;AACD,KAnBA;AAoBD,GAxBD;AAyBE,CA1BH;;AA4BA,eAAeN,aAAa,CAC3B;AACC,GAACG,YAAD,GAAgB,CAAC2B,KAAD,EAAQC,MAAR,KACf9B,OAAO,CAAC6B,KAAD,EAAQE,KAAK,IAAI;AACvBA,IAAAA,KAAK,CAACtB,IAAN,GAAaqB,MAAM,CAACE,OAAP,CAAe3B,QAA5B;AACA0B,IAAAA,KAAK,CAACxB,SAAN,GAAkB,KAAlB;AACA,GAHM,CAFT;AAMC,GAACJ,OAAD,GAAW,CAAC0B,KAAD,EAAQC,MAAR,KACV9B,OAAO,CAAC6B,KAAD,EAAQE,KAAK,IAAI;AACvBA,IAAAA,KAAK,CAACxB,SAAN,GAAkBuB,MAAM,CAACE,OAAP,CAAezB,SAAjC;AACA,GAFM;AAPT,CAD2B,EAY3BC,YAZ2B,CAA5B;AAeA,MAAMyB,cAAc,GAAG;AACtB7B,EAAAA,WADsB;AAEtBM,EAAAA;AAFsB,CAAvB;AAKA,SAASuB,cAAT","sourcesContent":["// import { createAction, handleActions } from 'redux-actions';\n// import { produce } from 'immer';\n\n// import { api } from '../../shared/api';\n\n// const GET_PRODUCTS = 'GET_PRODUCTS';\n// const LOADING = 'LOADING';\n\n// const getProducts = createAction(GET_PRODUCTS, products => ({\n// \tproducts,\n// }));\n// const loading = createAction(LOADING, isLoading => ({\n// \tisLoading,\n// }));\n\n// const initialState = {\n// \tproducts: [],\n// \tisLoading: false,\n// \t// list: [\n// \t// \t{\t\n// \t// \t\tpostId: \"postId\",\n// \t// \t\ttitle: '[올리타리아] 엑스트라 버진 올리브유',\n// \t// \t\timg: 'https://img-cf.kurly.com/shop/data/goods/1587519777879l0.jpg',\n// \t// \t\tprice: 15000,\n// \t// \t},\n// \t// ]\n// };\n\n// const getProductsMiddleWare = () => {\n// \treturn function (dispatch, getState, { history }) {\n// \t\tdispatch(loading(true));\n// \t\tapi\n// \t\t\t.get('page/main/new')\n// \t\t\t.then(\n// \t\t\t\t(res) => {\n// \t\t\t\t\t// const products = res.data;\n// \t\t\t\t\t// const products = res.data.post;\n// \t\t\t\t\t// const products = res.data.list\n// \t\t\t\t\tlet products = [];\n// \t\t\t\t\tres.forEach((p)=>{\n// \t\t\t\t\t\tlet product = {\n// \t\t\t\t\t\t\tpostId: p.postId,\n// \t\t\t\t\t\t\ttitle: p.title,\n// \t\t\t\t\t\t\tprice: p.price,\n// \t\t\t\t\t\t\timg: p.img,\n// \t\t\t\t\t\t}\n// \t\t\t\t\tproducts.push(product);\n// \t\t\t\t\t})\n// \t\t\t\t\tdispatch(getProducts(products));\n// \t\t\t\t},\n// \t\t\t\t// { withCredentials: true },\n// \t\t\t)\n// \t\t\t.catch(err => {\n// \t\t\t\tconsole.error(err);\n// \t\t\t\tdispatch(loading(false));\n// \t\t\t});\n// \t};\n\n// \t// return function(dispatch) {\n// \t// \tapi \n// \t// \t.get('/page/main/new')\n// \t// \t.then(res=>{\n\t\t  \n// \t// \t\tdispatch(getProducts(res.data));\n// \t// \t})\n// \t// \t.catch(err=> console.log(err));\n// \t// }\n// };\n\n// export default handleActions(\n// \t{\n// \t\t[GET_PRODUCTS]: (state, action) =>\n// \t\t\tproduce(state, draft => {\n// \t\t\t\tdraft.list = action.payload.products;\n// \t\t\t\t// draft.sortByNew = action.payload.products;\n// \t\t\t\tdraft.isLoading = false;\n// \t\t\t}),\n// \t\t[LOADING]: (state, action) =>\n// \t\t\tproduce(state, draft => {\n// \t\t\t\tdraft.isLoading = action.payload.isLoading;\n// \t\t\t}),\n// \t},\n// \tinitialState,\n// );\n\n// const actionCreators = {\n// \tgetProducts,\n// \tgetProductsMiddleWare,\n// };\n\n// export { actionCreators };\n\nimport { createAction, handleActions } from 'redux-actions';\nimport { produce } from 'immer';\n\nimport { api } from '../../shared/api';\n\nconst GET_PRODUCTS = 'GET_PRODUCTS';\nconst LOADING = 'LOADING';\n\nconst getProducts = createAction(GET_PRODUCTS, products => ({\n\tproducts,\n}));\nconst loading = createAction(LOADING, isLoading => ({\n\tisLoading,\n}));\n\nconst initialState = {\n\t// list: [\n\t// \t{\t\n\t// \t\tpostId: 'postId',\n\t// \t\ttitle: '[올리타리아] 엑스트라 버진 올리브유',\n\t// \t\timg: 'https://img-cf.kurly.com/shop/data/goods/1587519777879l0.jpg',\n\t// \t\tprice: 15000,\n\t// \t},\n\t// ],\n\tlist: [],\n\tisLoading: false,\n};\n\n// const getProductsMiddleWare = () => {\n// \treturn dispatch => {\n// \t\tdispatch(loading(true));\n// \t\tapi\n// \t\t\t.get('/page/main/new')\n// \t\t\t.then(\n// \t\t\t\tres => {\n// \t\t\t\t\tconst products = res.data.post;\n// \t\t\t\t\tdispatch(getProducts(products));\n// \t\t\t\t},\n// \t\t\t\t{ withCredentials: true },\n// \t\t\t)\n// \t\t\t.catch(err => {\n// \t\t\t\tconsole.error(err);\n// \t\t\t\tdispatch(loading(false));\n// \t\t\t});\n// \t};\n// };\n\nconst getProductsMiddleWare = () => {\n\treturn function (dispatch, getState, { history }) {\n\t  \n\t  dispatch(loading(true));\n  \n\t  api\n\t  \t.get('/page/main/new')\n\t//   fetch(API).then((response) => response.json())\n\t\t.then((result) => {\n\t\t  console.log(result.data.sortByNew)\n\t\t  let products = [];\n\n\t\t  result.forEach((p) => {\n\t\t\t\n\t\t\tlet product = {\n\t\t\t  postId: p.postId,\n\t\t\t  title: p.title,\n\t\t\t  price: p.price,\n\t\t\t//   subtext: p.subtext,\n\t\t\t  img:p.img,\n\t\t\t}\n\t\t  products.push(product);\n\t\t  });\n\t\t  dispatch(getProducts(products));\n\t\t})\n\t}\n  };\n\nexport default handleActions(\n\t{\n\t\t[GET_PRODUCTS]: (state, action) =>\n\t\t\tproduce(state, draft => {\n\t\t\t\tdraft.list = action.payload.products;\n\t\t\t\tdraft.isLoading = false;\n\t\t\t}),\n\t\t[LOADING]: (state, action) =>\n\t\t\tproduce(state, draft => {\n\t\t\t\tdraft.isLoading = action.payload.isLoading;\n\t\t\t}),\n\t},\n\tinitialState,\n);\n\nconst actionCreators = {\n\tgetProducts,\n\tgetProductsMiddleWare,\n};\n\nexport { actionCreators };"]},"metadata":{},"sourceType":"module"}