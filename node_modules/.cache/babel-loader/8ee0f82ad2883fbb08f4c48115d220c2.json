{"ast":null,"code":"var _jsxFileName = \"/Users/jeonghwan/Desktop/Clonemk/clone_mk/clone_mk/src/pages/Login.js\",\n    _s = $RefreshSig$();\n\n// // Login.js\n// // import를 한다.\n// import React, { useState } from 'react';\n// import styled from 'styled-components';\n// import { Grid, Text, Input, Button } from '../elements/index';\n// import { history } from '../redux/configureStore';\n// import { useDispatch } from 'react-redux';\n// import { actionCreators as userActions } from '../redux/modules/user';\n// // Login 함수형 컴포넌트를 만든다.\n// const Login = props => {\n// \tconst dispatch = useDispatch();\n// \tconst [email, setEmail] = useState('');\n// \tconst [password, setPassword] = useState('');\n// \tconst login = (email, password) => {\n// \t\tif (email === '' || password === '') {\n// \t\t\talert('아이디 혹은 비밀번호 오류입니다.');\n// \t\t\treturn false;\n// \t\t}\n// \t\tdispatch(userActions.loginAPI(email, password));\n// \t};\n// \tconst onChangeId = e => {\n// \t\tsetEmail(e.target.value);\n// \t};\n// \tconst onChangePw = e => {\n// \t\tsetPassword(e.target.value);\n// \t};\n// \treturn (\n// \t\t<React.Fragment>\n// \t\t\t<LoginWrap>\n// \t\t\t\t<Text size=\"20px\" bold margin=\"0px 0px 30px 0px\">\n// \t\t\t\t\t로그인\n// \t\t\t\t</Text>\n// \t\t\t\t<Input placeholder=\"아이디를 입력해주세요\" onChange={onChangeId} />\n// \t\t\t\t<Input\n// \t\t\t\t\tplaceholder=\"비밀번호를 입력해주세요\"\n// \t\t\t\t\ttype=\"password\"\n// \t\t\t\t\tmargin=\"10px 0px\"\n// \t\t\t\t\tonChange={onChangePw}\n// \t\t\t\t/>\n// \t\t\t\t<Grid flex width=\"340px\" margin=\"-15px 0px 0px 0px\">\n// \t\t\t\t\t<Grid flex>\n// \t\t\t\t\t\t<input type=\"checkbox\" name=\"check\" />\n// \t\t\t\t\t\t<Text size=\"13px\">보안접속</Text>\n// \t\t\t\t\t</Grid>\n// \t\t\t\t\t<Grid>\n// \t\t\t\t\t\t<FindIdPw>\n// \t\t\t\t\t\t\t<FindLi>아이디찾기</FindLi>\n// \t\t\t\t\t\t\t<FindLi>비밀번호 찾기</FindLi>\n// \t\t\t\t\t\t</FindIdPw>\n// \t\t\t\t\t</Grid>\n// \t\t\t\t</Grid>\n// \t\t\t\t<Button\n// \t\t\t\t\tmargin=\"17px 0px 0px 0px\"\n// \t\t\t\t\tonClick={() => {\n// \t\t\t\t\t\tlogin(email, password);\n// \t\t\t\t\t\t// history.push('/');\n// \t\t\t\t\t}}\n// \t\t\t\t>\n// \t\t\t\t\t로그인\n// \t\t\t\t</Button>\n// \t\t\t\t<Button\n// \t\t\t\t\tmargin=\"10px\"\n// \t\t\t\t\tbg=\"#ffffff\"\n// \t\t\t\t\tcolor=\"#5f0080\"\n// \t\t\t\t\tonClick={() => {\n// \t\t\t\t\t\thistory.push('/signup');\n// \t\t\t\t\t}}\n// \t\t\t\t>\n// \t\t\t\t\t회원가입\n// \t\t\t\t</Button>\n// \t\t\t</LoginWrap>\n// \t\t</React.Fragment>\n// \t);\n// };\n// // styled-components를 사용한다.\n// const LoginWrap = styled.div`\n// \twidth: 340px;\n// \tmargin: -50px auto;\n// \tdisplay: flex;\n// \talign-items: center;\n// \tflex-direction: column;\n// \tpadding: 90px 0px 120px 0px;\n// `;\n// const FindIdPw = styled.ul`\n// \tfont-size: 13px;\n// \tdisplay: flex;\n// \tgap: 5px;\n// \t& li:nth-child(1)::after {\n// \t\tcontent: '|';\n// \t\tfont-size: 6px;\n// \t\tfont-weight: 600;\n// \t\tmargin-left: 5px;\n// \t\tposition: relative;\n// \t\ttop: -2px;\n// \t}\n// `;\n// const FindLi = styled.li`\n// \tlist-style: none;\n// `;\n// // export를 통해 밖에서도 사용할 수 있도록 설정해 둔다.\n// export default Login;\n// Login.js\n// import를 한다.\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Grid, Text, Input, Button } from \"../elements/index\";\nimport { history } from \"../redux/configureStore\";\nimport { emailCheck } from \"../shared/common\";\nimport { actionCreators as userActions } from \"../redux/modules/user\"; // Login 함수형 컴포넌트를 만든다.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const login = e => {\n    // e.preventDefault();\n    if (email === \"\" || password === \"\") {\n      console.log(\"아이디 혹은 비밀번호를 입력해주세요.\");\n      return;\n    }\n\n    console.log(email, password, \"의 로그인 요청을 dispatch 했습니다.\");\n    dispatch(userActions.loginAPI(email, password));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(LoginWrap, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        size: \"20px\",\n        bold: true,\n        margin: \"0px 0px 30px 0px\",\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n        type: \"password\",\n        margin: \"10px 0px\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        flex: true,\n        width: \"340px\",\n        margin: \"-15px 0px 0px 0px\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          flex: true,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            size: \"13px\",\n            children: \"\\uBCF4\\uC548\\uC811\\uC18D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(FindIdPw, {\n            children: [/*#__PURE__*/_jsxDEV(FindLi, {\n              children: \"\\uC544\\uC774\\uB514\\uCC3E\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FindLi, {\n              children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        margin: \"17px 0px 0px 0px\",\n        onClick: () => {\n          login(email, password);\n        },\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        margin: \"10px\",\n        bg: \"#ffffff\",\n        color: \"#5f0080\",\n        onClick: () => {\n          history.push(\"/signup\");\n        },\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}; // styled-components를 사용한다.\n\n\n_s(Login, \"oGVy2d0YsXZ8Qy12o3q+fpM2WrE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Login;\nconst LoginWrap = styled.div`\n  width: 340px;\n  margin: -50px auto;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  padding: 90px 0px 120px 0px;\n`;\n_c2 = LoginWrap;\nconst FindIdPw = styled.ul`\n  font-size: 13px;\n  display: flex;\n  gap: 5px;\n  & li:nth-child(1)::after {\n    content: \"|\";\n    font-size: 6px;\n    font-weight: 600;\n    margin-left: 5px;\n    position: relative;\n    top: -2px;\n  }\n`;\n_c3 = FindIdPw;\nconst FindLi = styled.li`\n  list-style: none;\n`; // export를 통해 밖에서도 사용할 수 있도록 설정해 둔다.\n\n_c4 = FindLi;\nexport default Login;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"LoginWrap\");\n$RefreshReg$(_c3, \"FindIdPw\");\n$RefreshReg$(_c4, \"FindLi\");","map":{"version":3,"sources":["/Users/jeonghwan/Desktop/Clonemk/clone_mk/clone_mk/src/pages/Login.js"],"names":["React","useState","useDispatch","styled","Grid","Text","Input","Button","history","emailCheck","actionCreators","userActions","Login","props","dispatch","email","setEmail","password","setPassword","login","e","console","log","loginAPI","target","value","push","LoginWrap","div","FindIdPw","ul","FindLi","li"],"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","sourcesContent":["// // Login.js\n\n// // import를 한다.\n// import React, { useState } from 'react';\n// import styled from 'styled-components';\n// import { Grid, Text, Input, Button } from '../elements/index';\n// import { history } from '../redux/configureStore';\n// import { useDispatch } from 'react-redux';\n// import { actionCreators as userActions } from '../redux/modules/user';\n\n// // Login 함수형 컴포넌트를 만든다.\n// const Login = props => {\n// \tconst dispatch = useDispatch();\n\n// \tconst [email, setEmail] = useState('');\n// \tconst [password, setPassword] = useState('');\n\n// \tconst login = (email, password) => {\n// \t\tif (email === '' || password === '') {\n// \t\t\talert('아이디 혹은 비밀번호 오류입니다.');\n// \t\t\treturn false;\n// \t\t}\n\n// \t\tdispatch(userActions.loginAPI(email, password));\n// \t};\n\n// \tconst onChangeId = e => {\n// \t\tsetEmail(e.target.value);\n// \t};\n\n// \tconst onChangePw = e => {\n// \t\tsetPassword(e.target.value);\n// \t};\n\n// \treturn (\n// \t\t<React.Fragment>\n// \t\t\t<LoginWrap>\n// \t\t\t\t<Text size=\"20px\" bold margin=\"0px 0px 30px 0px\">\n// \t\t\t\t\t로그인\n// \t\t\t\t</Text>\n// \t\t\t\t<Input placeholder=\"아이디를 입력해주세요\" onChange={onChangeId} />\n// \t\t\t\t<Input\n// \t\t\t\t\tplaceholder=\"비밀번호를 입력해주세요\"\n// \t\t\t\t\ttype=\"password\"\n// \t\t\t\t\tmargin=\"10px 0px\"\n// \t\t\t\t\tonChange={onChangePw}\n// \t\t\t\t/>\n// \t\t\t\t<Grid flex width=\"340px\" margin=\"-15px 0px 0px 0px\">\n// \t\t\t\t\t<Grid flex>\n// \t\t\t\t\t\t<input type=\"checkbox\" name=\"check\" />\n// \t\t\t\t\t\t<Text size=\"13px\">보안접속</Text>\n// \t\t\t\t\t</Grid>\n// \t\t\t\t\t<Grid>\n// \t\t\t\t\t\t<FindIdPw>\n// \t\t\t\t\t\t\t<FindLi>아이디찾기</FindLi>\n// \t\t\t\t\t\t\t<FindLi>비밀번호 찾기</FindLi>\n// \t\t\t\t\t\t</FindIdPw>\n// \t\t\t\t\t</Grid>\n// \t\t\t\t</Grid>\n// \t\t\t\t<Button\n// \t\t\t\t\tmargin=\"17px 0px 0px 0px\"\n// \t\t\t\t\tonClick={() => {\n// \t\t\t\t\t\tlogin(email, password);\n// \t\t\t\t\t\t// history.push('/');\n// \t\t\t\t\t}}\n// \t\t\t\t>\n// \t\t\t\t\t로그인\n// \t\t\t\t</Button>\n// \t\t\t\t<Button\n// \t\t\t\t\tmargin=\"10px\"\n// \t\t\t\t\tbg=\"#ffffff\"\n// \t\t\t\t\tcolor=\"#5f0080\"\n// \t\t\t\t\tonClick={() => {\n// \t\t\t\t\t\thistory.push('/signup');\n// \t\t\t\t\t}}\n// \t\t\t\t>\n// \t\t\t\t\t회원가입\n// \t\t\t\t</Button>\n// \t\t\t</LoginWrap>\n// \t\t</React.Fragment>\n// \t);\n// };\n\n// // styled-components를 사용한다.\n// const LoginWrap = styled.div`\n// \twidth: 340px;\n// \tmargin: -50px auto;\n// \tdisplay: flex;\n// \talign-items: center;\n// \tflex-direction: column;\n// \tpadding: 90px 0px 120px 0px;\n// `;\n\n// const FindIdPw = styled.ul`\n// \tfont-size: 13px;\n// \tdisplay: flex;\n// \tgap: 5px;\n// \t& li:nth-child(1)::after {\n// \t\tcontent: '|';\n// \t\tfont-size: 6px;\n// \t\tfont-weight: 600;\n// \t\tmargin-left: 5px;\n// \t\tposition: relative;\n// \t\ttop: -2px;\n// \t}\n// `;\n\n// const FindLi = styled.li`\n// \tlist-style: none;\n// `;\n\n// // export를 통해 밖에서도 사용할 수 있도록 설정해 둔다.\n// export default Login;\n\n// Login.js\n\n// import를 한다.\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Grid, Text, Input, Button } from \"../elements/index\";\nimport { history } from \"../redux/configureStore\";\nimport { emailCheck } from \"../shared/common\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\n\n// Login 함수형 컴포넌트를 만든다.\nconst Login = (props) => {\n  const dispatch = useDispatch();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const login = (e) => {\n    // e.preventDefault();\n\n    if (email === \"\" || password === \"\") {\n      console.log(\"아이디 혹은 비밀번호를 입력해주세요.\");\n\n      return;\n    }\n\n    console.log(email, password, \"의 로그인 요청을 dispatch 했습니다.\");\n\n    dispatch(userActions.loginAPI(email, password));\n  };\n  return (\n    <React.Fragment>\n      <LoginWrap>\n        <Text size=\"20px\" bold margin=\"0px 0px 30px 0px\">\n          로그인\n        </Text>\n        <Input\n          placeholder=\"아이디를 입력해주세요\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <Input\n          placeholder=\"비밀번호를 입력해주세요\"\n          type=\"password\"\n          margin=\"10px 0px\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <Grid flex width=\"340px\" margin=\"-15px 0px 0px 0px\">\n          <Grid flex>\n            <input type=\"checkbox\" name=\"check\" />\n            <Text size=\"13px\">보안접속</Text>\n          </Grid>\n          <Grid>\n            <FindIdPw>\n              <FindLi>아이디찾기</FindLi>\n              <FindLi>비밀번호 찾기</FindLi>\n            </FindIdPw>\n          </Grid>\n        </Grid>\n        <Button\n          margin=\"17px 0px 0px 0px\"\n          onClick={() => {\n            login(email, password);\n          }}\n        >\n          로그인\n        </Button>\n        <Button\n          margin=\"10px\"\n          bg=\"#ffffff\"\n          color=\"#5f0080\"\n          onClick={() => {\n            history.push(\"/signup\");\n          }}\n        >\n          회원가입\n        </Button>\n      </LoginWrap>\n    </React.Fragment>\n  );\n};\n\n// styled-components를 사용한다.\nconst LoginWrap = styled.div`\n  width: 340px;\n  margin: -50px auto;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  padding: 90px 0px 120px 0px;\n`;\n\nconst FindIdPw = styled.ul`\n  font-size: 13px;\n  display: flex;\n  gap: 5px;\n  & li:nth-child(1)::after {\n    content: \"|\";\n    font-size: 6px;\n    font-weight: 600;\n    margin-left: 5px;\n    position: relative;\n    top: -2px;\n  }\n`;\n\nconst FindLi = styled.li`\n  list-style: none;\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정해 둔다.\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}