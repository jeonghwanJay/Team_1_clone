{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport { produce } from 'immer';\nimport { api } from '../../shared/api';\nconst GET_PRODUCTS = 'GET_PRODUCTS';\nconst LOADING = 'LOADING';\nconst getProducts = createAction(GET_PRODUCTS, products => ({\n  products\n}));\nconst loading = createAction(LOADING, isLoading => ({\n  isLoading\n}));\nconst initialState = {\n  list: [],\n  isLoading: false\n}; // 메인페이지 제품들 보여주기\n\nconst getProductsMiddleWare = () => {\n  return function (dispatch) {\n    dispatch(loading(true));\n    api.get('/page/main/new').then(result => {\n      console.log(result.data.sortByNew);\n      const sort = result.data.sortByNew;\n      let products = [];\n      sort.forEach(p => {\n        let product = {\n          postId: p.postId,\n          title: p.title,\n          price: p.price,\n          img: p.img\n        };\n        products.push(product);\n      });\n      dispatch(getProducts(products));\n    });\n  };\n};\n\nexport default handleActions({\n  [GET_PRODUCTS]: (state, action) => produce(state, draft => {\n    draft.list = action.payload.products;\n    draft.isLoading = false;\n  }),\n  [LOADING]: (state, action) => produce(state, draft => {\n    draft.isLoading = action.payload.isLoading;\n  })\n}, initialState);\nconst actionCreators = {\n  getProducts,\n  getProductsMiddleWare\n};\nexport { actionCreators };","map":{"version":3,"sources":["/Users/jeonghwan/Desktop/Clonemk/clone_mk/clone_mk/src/redux/modules/product.js"],"names":["createAction","handleActions","produce","api","GET_PRODUCTS","LOADING","getProducts","products","loading","isLoading","initialState","list","getProductsMiddleWare","dispatch","get","then","result","console","log","data","sortByNew","sort","forEach","p","product","postId","title","price","img","push","state","action","draft","payload","actionCreators"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,GAAT,QAAoB,kBAApB;AAEA,MAAMC,YAAY,GAAG,cAArB;AACA,MAAMC,OAAO,GAAG,SAAhB;AAEA,MAAMC,WAAW,GAAGN,YAAY,CAACI,YAAD,EAAeG,QAAQ,KAAK;AAC3DA,EAAAA;AAD2D,CAAL,CAAvB,CAAhC;AAGA,MAAMC,OAAO,GAAGR,YAAY,CAACK,OAAD,EAAUI,SAAS,KAAK;AACnDA,EAAAA;AADmD,CAAL,CAAnB,CAA5B;AAIA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBF,EAAAA,SAAS,EAAE;AAFS,CAArB,C,CAKC;;AACD,MAAMG,qBAAqB,GAAG,MAAM;AACnC,SAAO,UAAUC,QAAV,EAAoB;AAEzBA,IAAAA,QAAQ,CAACL,OAAO,CAAC,IAAD,CAAR,CAAR;AAEAL,IAAAA,GAAG,CACDW,GADF,CACM,gBADN,EAEAC,IAFA,CAEMC,MAAD,IAAY;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAP,CAAYC,SAAxB;AAEA,YAAMC,IAAI,GAAGL,MAAM,CAACG,IAAP,CAAYC,SAAzB;AAEA,UAAIb,QAAQ,GAAG,EAAf;AAEAc,MAAAA,IAAI,CAACC,OAAL,CAAcC,CAAD,IAAO;AAErB,YAAIC,OAAO,GAAG;AACZC,UAAAA,MAAM,EAAEF,CAAC,CAACE,MADE;AAEZC,UAAAA,KAAK,EAAEH,CAAC,CAACG,KAFG;AAGZC,UAAAA,KAAK,EAAEJ,CAAC,CAACI,KAHG;AAIZC,UAAAA,GAAG,EAACL,CAAC,CAACK;AAJM,SAAd;AAMCrB,QAAAA,QAAQ,CAACsB,IAAT,CAAcL,OAAd;AACC,OATD;AAUAX,MAAAA,QAAQ,CAACP,WAAW,CAACC,QAAD,CAAZ,CAAR;AACD,KApBA;AAqBD,GAzBD;AA0BE,CA3BH;;AA6BA,eAAeN,aAAa,CAC3B;AACC,GAACG,YAAD,GAAgB,CAAC0B,KAAD,EAAQC,MAAR,KACf7B,OAAO,CAAC4B,KAAD,EAAQE,KAAK,IAAI;AACvBA,IAAAA,KAAK,CAACrB,IAAN,GAAaoB,MAAM,CAACE,OAAP,CAAe1B,QAA5B;AACAyB,IAAAA,KAAK,CAACvB,SAAN,GAAkB,KAAlB;AACA,GAHM,CAFT;AAMC,GAACJ,OAAD,GAAW,CAACyB,KAAD,EAAQC,MAAR,KACV7B,OAAO,CAAC4B,KAAD,EAAQE,KAAK,IAAI;AACvBA,IAAAA,KAAK,CAACvB,SAAN,GAAkBsB,MAAM,CAACE,OAAP,CAAexB,SAAjC;AACA,GAFM;AAPT,CAD2B,EAY3BC,YAZ2B,CAA5B;AAeA,MAAMwB,cAAc,GAAG;AACtB5B,EAAAA,WADsB;AAEtBM,EAAAA;AAFsB,CAAvB;AAKA,SAASsB,cAAT","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\nimport { produce } from 'immer';\nimport { api } from '../../shared/api';\n\nconst GET_PRODUCTS = 'GET_PRODUCTS';\nconst LOADING = 'LOADING';\n\nconst getProducts = createAction(GET_PRODUCTS, products => ({\n\tproducts,\n}));\nconst loading = createAction(LOADING, isLoading => ({\n\tisLoading,\n}));\n\nconst initialState = {\n\tlist: [],\n\tisLoading: false,\n};\n\n\t// 메인페이지 제품들 보여주기\nconst getProductsMiddleWare = () => {\n\treturn function (dispatch) {\n\t  \n\t  dispatch(loading(true));\n  \n\t  api\n\t  \t.get('/page/main/new')\n\t\t.then((result) => {\n\t\t  console.log(result.data.sortByNew)\n\t\t  \n\t\t  const sort = result.data.sortByNew\n\t\t\t\n\t\t  let products = [];\n\n\t\t  sort.forEach((p) => {\n\t\t\t\n\t\t\tlet product = {\n\t\t\t  postId: p.postId,\n\t\t\t  title: p.title,\n\t\t\t  price: p.price,\n\t\t\t  img:p.img,\n\t\t\t}\n\t\t  products.push(product);\n\t\t  });\n\t\t  dispatch(getProducts(products));\n\t\t})\n\t}\n  };\n\nexport default handleActions(\n\t{\n\t\t[GET_PRODUCTS]: (state, action) =>\n\t\t\tproduce(state, draft => {\n\t\t\t\tdraft.list = action.payload.products;\n\t\t\t\tdraft.isLoading = false;\n\t\t\t}),\n\t\t[LOADING]: (state, action) =>\n\t\t\tproduce(state, draft => {\n\t\t\t\tdraft.isLoading = action.payload.isLoading;\n\t\t\t}),\n\t},\n\tinitialState,\n);\n\nconst actionCreators = {\n\tgetProducts,\n\tgetProductsMiddleWare,\n};\n\nexport { actionCreators };"]},"metadata":{},"sourceType":"module"}