{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport { produce } from 'immer';\nimport { api } from '../../shared/api';\nconst GET_PRODUCTS = 'GET_PRODUCTS';\nconst LOADING = 'LOADING';\nconst getProducts = createAction(GET_PRODUCTS, products => ({\n  products\n}));\nconst loading = createAction(LOADING, isLoading => ({\n  isLoading\n}));\nconst initialState = {\n  sortByNew: [{\n    postId: \"postId\",\n    title: '[올리타리아] 엑스트라 버진 올리브유',\n    img: 'https://img-cf.kurly.com/shop/data/goods/1587519777879l0.jpg',\n    price: 15000\n  }]\n};\n\nconst getProductsMiddleWare = () => {\n  return dispatch => {\n    dispatch(loading(true));\n    api.get('page/main/new').then(res => {\n      const products = res.sortByNew; // const products = res.data.post;\n      // const products = res.data.list\n\n      dispatch(getProducts(products));\n    }, {\n      withCredentials: true\n    }).catch(err => {\n      console.error(err);\n      dispatch(loading(false));\n    });\n  };\n};\n\nexport default handleActions({\n  [GET_PRODUCTS]: (state, action) => produce(state, draft => {\n    // draft.list = action.payload.products;\n    draft.sortByNew = action.payload.products;\n    draft.isLoading = false;\n  }),\n  [LOADING]: (state, action) => produce(state, draft => {\n    draft.isLoading = action.payload.isLoading;\n  })\n}, initialState);\nconst actionCreators = {\n  getProducts,\n  getProductsMiddleWare\n};\nexport { actionCreators };","map":{"version":3,"sources":["/Users/jeonghwan/Desktop/Clonemk/clone_mk/clone_mk/src/redux/modules/product.js"],"names":["createAction","handleActions","produce","api","GET_PRODUCTS","LOADING","getProducts","products","loading","isLoading","initialState","sortByNew","postId","title","img","price","getProductsMiddleWare","dispatch","get","then","res","withCredentials","catch","err","console","error","state","action","draft","payload","actionCreators"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,SAASC,GAAT,QAAoB,kBAApB;AAEA,MAAMC,YAAY,GAAG,cAArB;AACA,MAAMC,OAAO,GAAG,SAAhB;AAEA,MAAMC,WAAW,GAAGN,YAAY,CAACI,YAAD,EAAeG,QAAQ,KAAK;AAC3DA,EAAAA;AAD2D,CAAL,CAAvB,CAAhC;AAGA,MAAMC,OAAO,GAAGR,YAAY,CAACK,OAAD,EAAUI,SAAS,KAAK;AACnDA,EAAAA;AADmD,CAAL,CAAnB,CAA5B;AAIA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,SAAS,EAAE,CACV;AACCC,IAAAA,MAAM,EAAE,QADT;AAECC,IAAAA,KAAK,EAAE,sBAFR;AAGCC,IAAAA,GAAG,EAAE,8DAHN;AAICC,IAAAA,KAAK,EAAE;AAJR,GADU;AADS,CAArB;;AAWA,MAAMC,qBAAqB,GAAG,MAAM;AACnC,SAAOC,QAAQ,IAAI;AAClBA,IAAAA,QAAQ,CAACT,OAAO,CAAC,IAAD,CAAR,CAAR;AACAL,IAAAA,GAAG,CACDe,GADF,CACM,eADN,EAEEC,IAFF,CAGEC,GAAG,IAAI;AACN,YAAMb,QAAQ,GAAGa,GAAG,CAACT,SAArB,CADM,CAEN;AACA;;AACAM,MAAAA,QAAQ,CAACX,WAAW,CAACC,QAAD,CAAZ,CAAR;AACA,KARH,EASE;AAAEc,MAAAA,eAAe,EAAE;AAAnB,KATF,EAWEC,KAXF,CAWQC,GAAG,IAAI;AACbC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACAN,MAAAA,QAAQ,CAACT,OAAO,CAAC,KAAD,CAAR,CAAR;AACA,KAdF;AAeA,GAjBD;AAkBA,CAnBD;;AAqBA,eAAeP,aAAa,CAC3B;AACC,GAACG,YAAD,GAAgB,CAACsB,KAAD,EAAQC,MAAR,KACfzB,OAAO,CAACwB,KAAD,EAAQE,KAAK,IAAI;AACvB;AACAA,IAAAA,KAAK,CAACjB,SAAN,GAAkBgB,MAAM,CAACE,OAAP,CAAetB,QAAjC;AACAqB,IAAAA,KAAK,CAACnB,SAAN,GAAkB,KAAlB;AACA,GAJM,CAFT;AAOC,GAACJ,OAAD,GAAW,CAACqB,KAAD,EAAQC,MAAR,KACVzB,OAAO,CAACwB,KAAD,EAAQE,KAAK,IAAI;AACvBA,IAAAA,KAAK,CAACnB,SAAN,GAAkBkB,MAAM,CAACE,OAAP,CAAepB,SAAjC;AACA,GAFM;AART,CAD2B,EAa3BC,YAb2B,CAA5B;AAgBA,MAAMoB,cAAc,GAAG;AACtBxB,EAAAA,WADsB;AAEtBU,EAAAA;AAFsB,CAAvB;AAKA,SAASc,cAAT","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\nimport { produce } from 'immer';\n\nimport { api } from '../../shared/api';\n\nconst GET_PRODUCTS = 'GET_PRODUCTS';\nconst LOADING = 'LOADING';\n\nconst getProducts = createAction(GET_PRODUCTS, products => ({\n\tproducts,\n}));\nconst loading = createAction(LOADING, isLoading => ({\n\tisLoading,\n}));\n\nconst initialState = {\n\tsortByNew: [\n\t\t{\t\n\t\t\tpostId: \"postId\",\n\t\t\ttitle: '[올리타리아] 엑스트라 버진 올리브유',\n\t\t\timg: 'https://img-cf.kurly.com/shop/data/goods/1587519777879l0.jpg',\n\t\t\tprice: 15000,\n\t\t},\n\t]\n};\n\nconst getProductsMiddleWare = () => {\n\treturn dispatch => {\n\t\tdispatch(loading(true));\n\t\tapi\n\t\t\t.get('page/main/new')\n\t\t\t.then(\n\t\t\t\tres => {\n\t\t\t\t\tconst products = res.sortByNew;\n\t\t\t\t\t// const products = res.data.post;\n\t\t\t\t\t// const products = res.data.list\n\t\t\t\t\tdispatch(getProducts(products));\n\t\t\t\t},\n\t\t\t\t{ withCredentials: true },\n\t\t\t)\n\t\t\t.catch(err => {\n\t\t\t\tconsole.error(err);\n\t\t\t\tdispatch(loading(false));\n\t\t\t});\n\t};\n};\n\nexport default handleActions(\n\t{\n\t\t[GET_PRODUCTS]: (state, action) =>\n\t\t\tproduce(state, draft => {\n\t\t\t\t// draft.list = action.payload.products;\n\t\t\t\tdraft.sortByNew = action.payload.products;\n\t\t\t\tdraft.isLoading = false;\n\t\t\t}),\n\t\t[LOADING]: (state, action) =>\n\t\t\tproduce(state, draft => {\n\t\t\t\tdraft.isLoading = action.payload.isLoading;\n\t\t\t}),\n\t},\n\tinitialState,\n);\n\nconst actionCreators = {\n\tgetProducts,\n\tgetProductsMiddleWare,\n};\n\nexport { actionCreators };"]},"metadata":{},"sourceType":"module"}