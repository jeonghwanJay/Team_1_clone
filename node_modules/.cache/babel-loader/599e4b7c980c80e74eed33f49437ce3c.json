{"ast":null,"code":"const getCookie = name => {\n  let value = \"; \" + document.cookie;\n  let parts = value.split(`; ${name}=`);\n\n  if (parts.length === 2) {\n    return parts.pop().split(\";\").shift();\n  }\n};\n\nconst setCookie = function (name, value) {\n  let exp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 5;\n  let date = new Date();\n  date.setTime(date.getTime() + exp * 24 * 60 * 60 * 1000);\n  document.cookie = `${name}=${value}; expires=${date.toUTCString()}`;\n};\n\nconst deleteCookie = name => {\n  let date = new Date(\"2020-01-01\").toUTCString();\n  document.cookie = name + \"=; expires=\" + date;\n};\n\nexport { getCookie, setCookie, deleteCookie };","map":{"version":3,"sources":["/Users/jeonghwan/Desktop/Clonemk/clone_mk/clone_mk/src/shared/Cookie.js"],"names":["getCookie","name","value","document","cookie","parts","split","length","pop","shift","setCookie","exp","date","Date","setTime","getTime","toUTCString","deleteCookie"],"mappings":"AAAA,MAAMA,SAAS,GAAIC,IAAD,IAAU;AACxB,MAAIC,KAAK,GAAG,OAAOC,QAAQ,CAACC,MAA5B;AAEA,MAAIC,KAAK,GAAGH,KAAK,CAACI,KAAN,CAAa,KAAIL,IAAK,GAAtB,CAAZ;;AAEA,MAAGI,KAAK,CAACE,MAAN,KAAiB,CAApB,EAAuB;AACrB,WAAOF,KAAK,CAACG,GAAN,GAAYF,KAAZ,CAAkB,GAAlB,EAAuBG,KAAvB,EAAP;AACD;AACF,CARH;;AAUE,MAAMC,SAAS,GAAG,UAACT,IAAD,EAAOC,KAAP,EAA0B;AAAA,MAAZS,GAAY,uEAAN,CAAM;AAC1C,MAAIC,IAAI,GAAE,IAAIC,IAAJ,EAAV;AACAD,EAAAA,IAAI,CAACE,OAAL,CAAaF,IAAI,CAACG,OAAL,KAAiBJ,GAAG,GAAC,EAAJ,GAAO,EAAP,GAAU,EAAV,GAAa,IAA3C;AAEAR,EAAAA,QAAQ,CAACC,MAAT,GAAmB,GAAEH,IAAK,IAAGC,KAAM,aAAYU,IAAI,CAACI,WAAL,EAAmB,EAAlE;AACD,CALD;;AAOA,MAAMC,YAAY,GAAIhB,IAAD,IAAU;AAC7B,MAAIW,IAAI,GAAE,IAAIC,IAAJ,CAAS,YAAT,EAAuBG,WAAvB,EAAV;AAEAb,EAAAA,QAAQ,CAACC,MAAT,GAAkBH,IAAI,GAAC,aAAL,GAAmBW,IAArC;AACD,CAJD;;AAMA,SAAQZ,SAAR,EAAmBU,SAAnB,EAA8BO,YAA9B","sourcesContent":["const getCookie = (name) => {\n    let value = \"; \" + document.cookie;\n  \n    let parts = value.split(`; ${name}=`);\n    \n    if(parts.length === 2) {\n      return parts.pop().split(\";\").shift();\n    }\n  };\n  \n  const setCookie = (name, value, exp = 5) => {\n    let date= new Date();\n    date.setTime(date.getTime() + exp*24*60*60*1000);\n  \n    document.cookie = `${name}=${value}; expires=${date.toUTCString()}`;\n  };\n  \n  const deleteCookie = (name) => {\n    let date= new Date(\"2020-01-01\").toUTCString();\n  \n    document.cookie = name+\"=; expires=\"+date;\n  };\n  \n  export {getCookie, setCookie, deleteCookie};"]},"metadata":{},"sourceType":"module"}