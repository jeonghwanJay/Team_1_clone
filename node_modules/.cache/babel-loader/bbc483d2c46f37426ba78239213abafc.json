{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport { produce } from 'immer';\nimport { api } from '../../shared/api';\nconst GET_PRODUCTS = 'GET_PRODUCTS';\nconst LOADING = 'LOADING';\nconst getProducts = createAction(GET_PRODUCTS, products => ({\n  products\n}));\nconst loading = createAction(LOADING, isLoading => ({\n  isLoading\n}));\nconst initialState = {\n  products: [],\n  isLoading: false // list: [\n  // \t{\t\n  // \t\tpostId: \"postId\",\n  // \t\ttitle: '[올리타리아] 엑스트라 버진 올리브유',\n  // \t\timg: 'https://img-cf.kurly.com/shop/data/goods/1587519777879l0.jpg',\n  // \t\tprice: 15000,\n  // \t},\n  // ]\n\n};\n\nconst getProductsMiddleWare = () => {\n  return function (dispatch, getState, _ref) {\n    let {\n      history\n    } = _ref;\n    dispatch(loading(true));\n    api.get('page/main/new').then(res => {\n      // const products = res.data;\n      // const products = res.data.post;\n      // const products = res.data.list\n      let products = [];\n      res.forEach(p => {\n        let product = {\n          postId: p.postId,\n          title: p.title,\n          price: p.price,\n          img: p.img\n        };\n        products.push(product);\n      });\n      dispatch(getProducts(products));\n    } // { withCredentials: true },\n    ).catch(err => {\n      console.error(err);\n      dispatch(loading(false));\n    });\n  }; // return function(dispatch) {\n  // \tapi \n  // \t.get('/page/main/new')\n  // \t.then(res=>{\n  // \t\tdispatch(getProducts(res.data));\n  // \t})\n  // \t.catch(err=> console.log(err));\n  // }\n};\n\nexport default handleActions({\n  [GET_PRODUCTS]: (state, action) => produce(state, draft => {\n    draft.list = action.payload.products; // draft.sortByNew = action.payload.products;\n\n    draft.isLoading = false;\n  }),\n  [LOADING]: (state, action) => produce(state, draft => {\n    draft.isLoading = action.payload.isLoading;\n  })\n}, initialState);\nconst actionCreators = {\n  getProducts,\n  getProductsMiddleWare\n};\nexport { actionCreators };","map":{"version":3,"sources":["/Users/jeonghwan/Desktop/Clonemk/clone_mk/clone_mk/src/redux/modules/product.js"],"names":["createAction","handleActions","produce","api","GET_PRODUCTS","LOADING","getProducts","products","loading","isLoading","initialState","getProductsMiddleWare","dispatch","getState","history","get","then","res","forEach","p","product","postId","title","price","img","push","catch","err","console","error","state","action","draft","list","payload","actionCreators"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,SAASC,GAAT,QAAoB,kBAApB;AAEA,MAAMC,YAAY,GAAG,cAArB;AACA,MAAMC,OAAO,GAAG,SAAhB;AAEA,MAAMC,WAAW,GAAGN,YAAY,CAACI,YAAD,EAAeG,QAAQ,KAAK;AAC3DA,EAAAA;AAD2D,CAAL,CAAvB,CAAhC;AAGA,MAAMC,OAAO,GAAGR,YAAY,CAACK,OAAD,EAAUI,SAAS,KAAK;AACnDA,EAAAA;AADmD,CAAL,CAAnB,CAA5B;AAIA,MAAMC,YAAY,GAAG;AACpBH,EAAAA,QAAQ,EAAE,EADU;AAEpBE,EAAAA,SAAS,EAAE,KAFS,CAGpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAVoB,CAArB;;AAaA,MAAME,qBAAqB,GAAG,MAAM;AACnC,SAAO,UAAUC,QAAV,EAAoBC,QAApB,QAA2C;AAAA,QAAb;AAAEC,MAAAA;AAAF,KAAa;AACjDF,IAAAA,QAAQ,CAACJ,OAAO,CAAC,IAAD,CAAR,CAAR;AACAL,IAAAA,GAAG,CACDY,GADF,CACM,eADN,EAEEC,IAFF,CAGEC,GAAG,IAAI;AACN;AACA;AACA;AACA,UAAIV,QAAQ,GAAG,EAAf;AACAU,MAAAA,GAAG,CAACC,OAAJ,CAAaC,CAAD,IAAK;AAChB,YAAIC,OAAO,GAAG;AACbC,UAAAA,MAAM,EAAEF,CAAC,CAACE,MADG;AAEbC,UAAAA,KAAK,EAAEH,CAAC,CAACG,KAFI;AAGbC,UAAAA,KAAK,EAAEJ,CAAC,CAACI,KAHI;AAIbC,UAAAA,GAAG,EAAEL,CAAC,CAACK;AAJM,SAAd;AAMDjB,QAAAA,QAAQ,CAACkB,IAAT,CAAcL,OAAd;AACC,OARD;AASAR,MAAAA,QAAQ,CAACN,WAAW,CAACC,QAAD,CAAZ,CAAR;AACA,KAlBH,CAmBE;AAnBF,MAqBEmB,KArBF,CAqBQC,GAAG,IAAI;AACbC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACAf,MAAAA,QAAQ,CAACJ,OAAO,CAAC,KAAD,CAAR,CAAR;AACA,KAxBF;AAyBA,GA3BD,CADmC,CA8BnC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA,CAvCD;;AAyCA,eAAeP,aAAa,CAC3B;AACC,GAACG,YAAD,GAAgB,CAAC0B,KAAD,EAAQC,MAAR,KACf7B,OAAO,CAAC4B,KAAD,EAAQE,KAAK,IAAI;AACvBA,IAAAA,KAAK,CAACC,IAAN,GAAaF,MAAM,CAACG,OAAP,CAAe3B,QAA5B,CADuB,CAEvB;;AACAyB,IAAAA,KAAK,CAACvB,SAAN,GAAkB,KAAlB;AACA,GAJM,CAFT;AAOC,GAACJ,OAAD,GAAW,CAACyB,KAAD,EAAQC,MAAR,KACV7B,OAAO,CAAC4B,KAAD,EAAQE,KAAK,IAAI;AACvBA,IAAAA,KAAK,CAACvB,SAAN,GAAkBsB,MAAM,CAACG,OAAP,CAAezB,SAAjC;AACA,GAFM;AART,CAD2B,EAa3BC,YAb2B,CAA5B;AAgBA,MAAMyB,cAAc,GAAG;AACtB7B,EAAAA,WADsB;AAEtBK,EAAAA;AAFsB,CAAvB;AAKA,SAASwB,cAAT","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\nimport { produce } from 'immer';\n\nimport { api } from '../../shared/api';\n\nconst GET_PRODUCTS = 'GET_PRODUCTS';\nconst LOADING = 'LOADING';\n\nconst getProducts = createAction(GET_PRODUCTS, products => ({\n\tproducts,\n}));\nconst loading = createAction(LOADING, isLoading => ({\n\tisLoading,\n}));\n\nconst initialState = {\n\tproducts: [],\n\tisLoading: false,\n\t// list: [\n\t// \t{\t\n\t// \t\tpostId: \"postId\",\n\t// \t\ttitle: '[올리타리아] 엑스트라 버진 올리브유',\n\t// \t\timg: 'https://img-cf.kurly.com/shop/data/goods/1587519777879l0.jpg',\n\t// \t\tprice: 15000,\n\t// \t},\n\t// ]\n};\n\nconst getProductsMiddleWare = () => {\n\treturn function (dispatch, getState, { history }) {\n\t\tdispatch(loading(true));\n\t\tapi\n\t\t\t.get('page/main/new')\n\t\t\t.then(\n\t\t\t\tres => {\n\t\t\t\t\t// const products = res.data;\n\t\t\t\t\t// const products = res.data.post;\n\t\t\t\t\t// const products = res.data.list\n\t\t\t\t\tlet products = [];\n\t\t\t\t\tres.forEach((p)=>{\n\t\t\t\t\t\tlet product = {\n\t\t\t\t\t\t\tpostId: p.postId,\n\t\t\t\t\t\t\ttitle: p.title,\n\t\t\t\t\t\t\tprice: p.price,\n\t\t\t\t\t\t\timg: p.img,\n\t\t\t\t\t\t}\n\t\t\t\t\tproducts.push(product);\n\t\t\t\t\t})\n\t\t\t\t\tdispatch(getProducts(products));\n\t\t\t\t},\n\t\t\t\t// { withCredentials: true },\n\t\t\t)\n\t\t\t.catch(err => {\n\t\t\t\tconsole.error(err);\n\t\t\t\tdispatch(loading(false));\n\t\t\t});\n\t};\n\n\t// return function(dispatch) {\n\t// \tapi \n\t// \t.get('/page/main/new')\n\t// \t.then(res=>{\n\t\t  \n\t// \t\tdispatch(getProducts(res.data));\n\t// \t})\n\t// \t.catch(err=> console.log(err));\n\t// }\n};\n\nexport default handleActions(\n\t{\n\t\t[GET_PRODUCTS]: (state, action) =>\n\t\t\tproduce(state, draft => {\n\t\t\t\tdraft.list = action.payload.products;\n\t\t\t\t// draft.sortByNew = action.payload.products;\n\t\t\t\tdraft.isLoading = false;\n\t\t\t}),\n\t\t[LOADING]: (state, action) =>\n\t\t\tproduce(state, draft => {\n\t\t\t\tdraft.isLoading = action.payload.isLoading;\n\t\t\t}),\n\t},\n\tinitialState,\n);\n\nconst actionCreators = {\n\tgetProducts,\n\tgetProductsMiddleWare,\n};\n\nexport { actionCreators };"]},"metadata":{},"sourceType":"module"}